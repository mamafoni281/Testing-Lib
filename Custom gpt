--// Kavo-Style UI Library (Full) by ChatGPT, 2025
--// Open Source & Editable

local Library = {}
Library.theme = {
    Background = Color3.fromRGB(25, 25, 30),
    Accent = Color3.fromRGB(0, 170, 255),
    Text = Color3.fromRGB(230, 230, 230),
    Stroke = Color3.fromRGB(10, 10, 15),
    Corner = UDim.new(0, 10)
}

local TweenService = game:GetService("TweenService")
local Player = game.Players.LocalPlayer
local GUI = Instance.new("ScreenGui", Player:WaitForChild("PlayerGui"))
GUI.Name = "KavoLikeLib"
GUI.ResetOnSpawn = false

local function make(class, props)
    local obj = Instance.new(class)
    for i, v in pairs(props) do obj[i] = v end
    return obj
end

local function corner(frame)
    local c = Instance.new("UICorner")
    c.CornerRadius = Library.theme.Corner
    c.Parent = frame
end

---------------------------------------------------------------------
-- WINDOW
---------------------------------------------------------------------
function Library:CreateWindow(title)
    local self = {}

    local main = make("Frame", {
        Parent = GUI,
        Size = UDim2.new(0, 600, 0, 400),
        Position = UDim2.new(0.5, -300, 0.5, -200),
        BackgroundColor3 = Library.theme.Background,
    })
    corner(main)
    make("UIStroke", {Parent = main, Color = Library.theme.Stroke, Thickness = 1})

    local header = make("TextLabel", {
        Parent = main,
        Size = UDim2.new(1, 0, 0, 40),
        BackgroundTransparency = 1,
        Text = title or "Window",
        TextColor3 = Library.theme.Text,
        Font = Enum.Font.GothamBold,
        TextSize = 20,
    })

    local tabHolder = make("Frame", {
        Parent = main,
        Size = UDim2.new(0, 140, 1, -40),
        Position = UDim2.new(0, 0, 0, 40),
        BackgroundColor3 = Color3.fromRGB(20, 20, 25),
    })
    corner(tabHolder)
    make("UIListLayout", {Parent = tabHolder, Padding = UDim.new(0, 4)})

    local pageHolder = make("Frame", {
        Parent = main,
        Size = UDim2.new(1, -150, 1, -40),
        Position = UDim2.new(0, 150, 0, 40),
        BackgroundTransparency = 1,
    })

    local tabs = {}

    ---------------------------------------------------------------------
    -- TAB
    ---------------------------------------------------------------------
    function self:CreateTab(name)
        local tab = {}
        local tabButton = make("TextButton", {
            Parent = tabHolder,
            Size = UDim2.new(1, -10, 0, 30),
            BackgroundColor3 = Color3.fromRGB(30, 30, 35),
            Text = name,
            TextColor3 = Library.theme.Text,
            Font = Enum.Font.Gotham,
            TextSize = 16,
        })
        corner(tabButton)

        local page = make("ScrollingFrame", {
            Parent = pageHolder,
            Size = UDim2.new(1, 0, 1, 0),
            CanvasSize = UDim2.new(0, 0, 0, 0),
            BackgroundTransparency = 1,
            ScrollBarThickness = 4,
            Visible = false,
        })
        make("UIListLayout", {Parent = page, Padding = UDim.new(0, 8)})

        tabButton.MouseButton1Click:Connect(function()
            for _, t in pairs(tabs) do t.page.Visible = false end
            page.Visible = true
            TweenService:Create(tabButton, TweenInfo.new(0.15), {BackgroundColor3 = Library.theme.Accent}):Play()
            task.wait(0.15)
            TweenService:Create(tabButton, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(30,30,35)}):Play()
        end)

        -----------------------------------------------------------------
        -- SECTION
        -----------------------------------------------------------------
        function tab:CreateSection(label)
            local section = {}
            local sectionFrame = make("Frame", {
                Parent = page,
                Size = UDim2.new(1, -10, 0, 40),
                BackgroundColor3 = Color3.fromRGB(32, 32, 40),
            })
            corner(sectionFrame)

            make("TextLabel", {
                Parent = sectionFrame,
                BackgroundTransparency = 1,
                Text = label or "Section",
                TextColor3 = Library.theme.Text,
                Font = Enum.Font.GothamBold,
                TextSize = 16,
                Position = UDim2.new(0, 8, 0, 8),
                TextXAlignment = Enum.TextXAlignment.Left,
            })

            local content = make("Frame", {
                Parent = sectionFrame,
                BackgroundTransparency = 1,
                Size = UDim2.new(1, -10, 0, 120),
                Position = UDim2.new(0, 5, 0, 35),
            })
            make("UIListLayout", {Parent = content, Padding = UDim.new(0, 6)})

            -----------------------------------------------------------------
            -- BUTTON
            -----------------------------------------------------------------
            function section:CreateButton(text, callback)
                local b = make("TextButton", {
                    Parent = content,
                    Size = UDim2.new(1, 0, 0, 32),
                    BackgroundColor3 = Color3.fromRGB(40, 40, 48),
                    Text = text,
                    TextColor3 = Library.theme.Text,
                    Font = Enum.Font.Gotham,
                    TextSize = 14,
                })
                corner(b)
                b.MouseButton1Click:Connect(function()
                    TweenService:Create(b, TweenInfo.new(0.1), {BackgroundColor3 = Library.theme.Accent}):Play()
                    task.wait(0.1)
                    TweenService:Create(b, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(40, 40, 48)}):Play()
                    pcall(callback)
                end)
            end

            -----------------------------------------------------------------
            -- TOGGLE
            -----------------------------------------------------------------
            function section:CreateToggle(text, default, callback)
                local toggle = default or false
                local holder = make("Frame", {
                    Parent = content,
                    Size = UDim2.new(1, 0, 0, 32),
                    BackgroundTransparency = 1,
                })
                local label = make("TextLabel", {
                    Parent = holder,
                    BackgroundTransparency = 1,
                    Text = text,
                    TextColor3 = Library.theme.Text,
                    Font = Enum.Font.Gotham,
                    TextSize = 14,
                    Position = UDim2.new(0, 0, 0, 4),
                    Size = UDim2.new(1, -40, 1, 0),
                    TextXAlignment = Enum.TextXAlignment.Left,
                })

                local switch = make("Frame", {
                    Parent = holder,
                    AnchorPoint = Vector2.new(1, 0.5),
                    Position = UDim2.new(1, -10, 0.5, 0),
                    Size = UDim2.new(0, 34, 0, 18),
                    BackgroundColor3 = Color3.fromRGB(45, 45, 50),
                })
                corner(switch)

                local knob = make("Frame", {
                    Parent = switch,
                    Size = UDim2.new(0, 16, 0, 16),
                    Position = UDim2.new(0, 2, 0, 1),
                    BackgroundColor3 = Color3.fromRGB(160, 160, 160),
                })
                corner(knob)

                local function update()
                    if toggle then
                        TweenService:Create(switch, TweenInfo.new(0.15), {BackgroundColor3 = Library.theme.Accent}):Play()
                        TweenService:Create(knob, TweenInfo.new(0.15), {Position = UDim2.new(1, -18, 0, 1)}):Play()
                    else
                        TweenService:Create(switch, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(45,45,50)}):Play()
                        TweenService:Create(knob, TweenInfo.new(0.15), {Position = UDim2.new(0, 2, 0, 1)}):Play()
                    end
                end

                switch.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        toggle = not toggle
                        update()
                        pcall(callback, toggle)
                    end
                end)

                update()
            end

            -----------------------------------------------------------------
            -- DROPDOWN
            -----------------------------------------------------------------
            function section:CreateDropdown(name, list, default, callback)
                local current = default or list[1]
                local open = false

                local frame = make("Frame", {
                    Parent = content,
                    Size = UDim2.new(1, 0, 0, 34),
                    BackgroundColor3 = Color3.fromRGB(40, 40, 48),
                })
                corner(frame)

                local label = make("TextLabel", {
                    Parent = frame,
                    Text = name .. ": " .. current,
                    Size = UDim2.new(1, -10, 1, 0),
                    Position = UDim2.new(0, 5, 0, 0),
                    BackgroundTransparency = 1,
                    TextColor3 = Library.theme.Text,
                    Font = Enum.Font.Gotham,
                    TextSize = 14,
                    TextXAlignment = Enum.TextXAlignment.Left,
                })

                local dropFrame = make("Frame", {
                    Parent = frame,
                    Size = UDim2.new(1, 0, 0, 0),
                    Position = UDim2.new(0, 0, 1, 0),
                    BackgroundColor3 = Color3.fromRGB(35, 35, 42),
                    ClipsDescendants = true,
                })
                corner(dropFrame)
                make("UIListLayout", {Parent = dropFrame, Padding = UDim.new(0, 4)})

                for _, v in ipairs(list) do
                    local opt = make("TextButton", {
                        Parent = dropFrame,
                        Size = UDim2.new(1, -4, 0, 28),
                        BackgroundColor3 = Color3.fromRGB(45, 45, 55),
                        Text = v,
                        TextColor3 = Library.theme.Text,
                        Font = Enum.Font.Gotham,
                        TextSize = 14,
                    })
                    corner(opt)
                    opt.MouseButton1Click:Connect(function()
                        current = v
                        label.Text = name .. ": " .. v
                        TweenService:Create(dropFrame, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, 0)}):Play()
                        open = false
                        pcall(callback, v)
                    end)
                end

                frame.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        open = not open
                        local size = open and #list * 30 or 0
                        TweenService:Create(dropFrame, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, size)}):Play()
                    end
                end)
            end

            return section
        end

        page.Visible = (#tabs == 0)
        table.insert(tabs, {page = page})
        return tab
    end

    return self
end

return Library
